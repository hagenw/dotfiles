# Midnight Commander 3.0 extension file
# Warning: Structure of this file has changed completely with version 3.0
#
# All lines starting with # or empty lines are thrown away.
# Lines starting in the first column should have following format:
#
# keyword/descNL, i.e. everything after keyword/ until new line is desc
#
# keyword can be:
#
#    shell (desc is, when starting with a dot, any extension (no wildcars),
#          i.e. matches all the files *desc . Example: .tar matches *.tar;
#          if it doesn't start with a dot, it matches only a file of that name)
#
#    shell/i (desc is, when starting with a dot, any extension (no wildcars),
#          The same as shell but with case insensitive.
#
#    regex (desc is an extended regular expression)
#          Please note that we are using the GNU regex library and thus
#          \| matches the literal | and | has special meaning (or) and
#          () have special meaning and \( \) stand for literal ( ).
#
#    regex/i (desc is an extended regular expression)
#          The same as regex but with case insensitive.
#
#    type  (file matches this if `file %f` matches regular expression desc
#          (the filename: part from `file %f` is removed))
#
#    type/i (file matches this if `file %f` matches regular expression desc)
#          The same as type but with case insensitive.
#
#    directory (matches any directory matching regular expression desc)
#
#    include (matches an include directive)
#
#    default (matches any file no matter what desc is)
#
# Other lines should start with a space or tab and should be in the format:
#
# keyword=commandNL (with no spaces around =), where keyword should be:
#
#    Open (if the user presses Enter or doubleclicks it),
#
#    View (F3), Edit (F4)
#
#    Include is the keyword used to add any further entries from an include/
#    section
#
# command is any one-line shell command, with the following substitutions:
#
# %% -> % character
# %p -> name of the current file (without path, but pwd is its path).
#       Also provided to external application as MC_EXT_BASENAME
#       global variable
# %f -> name of the current file. Unlike %p, if file is located on a
#	non-local virtual filesystem, i.e. either tarfs or ftpfs,
#	then the file will be temporarily copied into a local directory
#	and %f will be the full path to this local temporal file.
#	If you don't want to get a local copy and want to get the
#	virtual fs path (like /#ftp:ftp.cvut.cz/pub/hungry/xword), then
#	use %d/%p instead of %f.
#       Also provided to external application as MC_EXT_FILENAME
#       global variable
# %d -> name of the current directory (pwd, without trailing slash)
#       Also provided to external application as MC_EXT_CURRENTDIR
#       global variable
# %s -> "selected files", i.e. space separated list of tagged files if any
#       or name of the current file.
#       Also provided to external application as MC_EXT_SELECTED
#       global variable
# %t -> list of tagged files
#       Also provided to external application as MC_EXT_ONLYTAGGED
#       global variable
# %u -> list of tagged files (they'll be untaged after the command)
#
# (If these 6 letters are in uppercase, they refer to the other panel.
# But you shouldn't have to use it in this file.)
#
#
# %cd -> the rest is a path mc should change into (cd won't work, since it's
#	a child process).  %cd handles even vfs names.
#
# %view -> the command you type will be piped into mc's internal file viewer
#	if you type only the %view and no command, viewer will load %f file
#	instead (i.e. no piping, so it is different to %view cat %f)
#	%view may be directly followed by {} with a list of any of
#	ascii (Ascii mode), hex (Hex mode), nroff (color highlighting for
#	text using backspace for bold and underscore) and unform
#	(no highlighting for nroff sequences) separated by commas.
#
# %var -> You use it like this: %var{VAR:default}.  This macro will expand
#       to the value of the VAR variable in the environment if it's set
#       otherwise the value in default will be used.  This is similar to
#       the Bourne shell ${VAR-default} construct.
#
# Rules are applied from top to bottom, thus the order is important.
# If some actions are missing, search continues as if this target didn't
# match (i.e. if a file matches the first and second entry and View action
# is missing in the first one, then on pressing F3 the View action from
# the second entry will be used. default should catch all the actions.
#
# Any new entries you develop for you are always welcome if they are
# useful on more than one system.  You can post your modifications
# as tickets at www.midnight-commander.org


### Changes ###
#
# Reorganization: 2012-03-07 Slava Zanko <slavazanko@gmail.com>


### Text Files ###

# Code
regex/i/\.(gnu|plt|py|c|cc|cpp|h|hh|hpp|so|so\.[0-9\.]*|m|rb|p|R)$
    Include=editor

# Text
regex/i/\.(md|xml|json|ya?ml|to?ml|conf|ini|css)
    Include=editor

# LaTeX related
regex/i/\.(tex|bib|log|aux|out|bbl)$
	Include=editor

include/editor
	Open=%var{EDITOR:editor} %f

### Images ###

shell/i/.gif
	Include=image

regex/i/\.(jpg|jpeg|png|tiff|ico)$
    Include=image

shell/i/.xcf
	Open=/usr/bin/gimp %f

shell/i/.svg
	View=/usr/bin/eog %f
	Open=/usr/bin/inkscape %f

include/image
    Open=eog %f &
    Edit=gimp %f &
    #View=preview-image.sh %f
    View=%view{ascii} /usr/lib/mc/ext.d/image.sh view ALL_FORMATS

### Sound files ###

regex/i/\.(wav|snd|voc|au|smp|aiff|snd|m4a|ape|aac|wv|ogg|flac|wma)$
    Include=sound

regex/i/\.(mp3)$
    Open=mpg123 %s

regex/i/\.(midi?|rmid?)$
	Open=/usr/lib/mc/ext.d/sound.sh open midi

regex/i/\.(m3u|pls)$
	Open=/usr/lib/mc/ext.d/sound.sh open playlist

include/sound
    Open=$HOME/.bin/play-loop.sh %s
    Edit=audacity %s &


### Video ###

regex/i/\.(avi|as[fx]|mkv|mov|mp4|m4v|mpe?g|ogv|mts|ts|vob|wmv|webm)$
	Include=video

include/video
	Open=mpv %s &
    Edit=avidemux %f &
	View=%view{ascii} /usr/lib/mc/ext.d/video.sh view ALL_FORMATS


### Documents ###

# CSV
shell/i/csv
    Open=vim %s
    Edit=ooffice %s &
    View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view csv

# PDF and postcripts
regex/i/\.(e?ps|pdf|dvi)$
    Open=evince %s &
    Edit=inkscape %s &
    View=%view{ascii} less %f

# HTML
regex/i/\.html?$
	Open=/usr/lib/mc/ext.d/web.sh open html
	View=%view{ascii} /usr/lib/mc/ext.d/web.sh view html

# Office
regex/i/\.(rtf|odt|sxw|ods|ots|odp|otp|odg|odb|odf|sxm|odm|sxg|do[ct]|docx|xl[sw]|ppt|pps)$
	Open=ooffice %f &
    Edit=%var{EDITOR:editor} %f
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view odt


# DjVu
regex/i/\.djvu?$
	Open=/usr/lib/mc/ext.d/doc.sh open djvu
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view djvu

# Comic Books
regex/i/\.cb[zr]$
	Open=/usr/lib/mc/ext.d/doc.sh open comic

# Epub & mobi
regex/i/\.(epub|mobi)$
	Open=/usr/lib/mc/ext.d/doc.sh open epub
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view epub


### Manuals ###

# GNU Info page
type/^Info\ text
 	Open=/usr/lib/mc/ext.d/text.sh open info

shell/.info
	Open=/usr/lib/mc/ext.d/text.sh open info

# Manual page
regex/(([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])|\.man)$
	Open=/usr/lib/mc/ext.d/text.sh open man %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man %var{PAGER:more}

# Manual page - compressed
regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.g?[Zz]$
	Open=/usr/lib/mc/ext.d/text.sh open man.gz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.gz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz$
	Open=/usr/lib/mc/ext.d/text.sh open man.bz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.bz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz2$
	Open=/usr/lib/mc/ext.d/text.sh open man.bz2 %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.bz2 %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.lzma$
	Open=/usr/lib/mc/ext.d/text.sh open man.lzma %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.lzma %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.xz$
	Open=/usr/lib/mc/ext.d/text.sh open man.xz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.xz %var{PAGER:more}

# CHM
shell/i/.chm
	Open=/usr/lib/mc/ext.d/text.sh open chm

### Miscellaneous ###

# Compiled Java classes
shell/.class
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view javaclass

# Makefile
regex/[Mm]akefile$
	Open=make -f %f %{Enter parameters}


# sqlite3.db
type/^SQLite 3.x database
	Open=/usr/lib/mc/ext.d/misc.sh open sqlite
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view sqlite

# dbf
shell/i/.dbf
	Open=/usr/lib/mc/ext.d/misc.sh open dbf
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view dbf

# REXX script
regex/\.(rexx?|cmd)$
       Open=rexx %f %{Enter parameters};echo "Press ENTER";read y


# Glade, a user interface designer for GTK+ and GNOME
shell/i/.glade
	Open=/usr/lib/mc/ext.d/misc.sh open glade

# Gettext Catalogs
regex/\.g?mo$
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view mo

# po
shell/.po
	Open=/usr/lib/mc/ext.d/misc.sh open po

# lyx
shell/i/.lyx
	Open=/usr/lib/mc/ext.d/misc.sh open lyx
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view lyx

# torrent
shell/i/.torrent
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view torrent

### Archives ###

# .tgz, .tpz, .tar.gz, .tar.z, .tar.Z, .ipk, .gem
regex/\.t([gp]?z|ar\.g?[zZ])$|\.ipk$|\.gem$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.gz

shell/.tar.bz
	# Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.bzip

regex/\.t(ar\.bz2|bz2?|b2)$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.bzip2

# .tar.lzma, .tlz
regex/\.t(ar\.lzma|lz)$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.lzma

# tar
shell/i/.tar
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar

# rar
regex/i/\.r(ar|[0-9][0-9])$
	Open=%cd %p/urar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view rar

# cpio
shell/.cpio.Z
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.z

shell/.cpio.xz
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.xz

shell/.cpio.gz
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.gz

shell/i/.cpio
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio

# 7zip archives (they are not man pages)
shell/i/.7z
	Open=%cd %p/u7z://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view 7z

# patch
regex/\.(diff|patch)(\.bz2)$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

regex/\.(diff|patch)(\.(gz|Z))$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

# ls-lR
regex/(^|\.)ls-?lR(\.gz|Z|bz2)$
	Open=%cd %p/lslR://

# trpm
shell/.trpm
	Open=%cd %p/trpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view trpm

# RPM packages (SuSE uses *.spm for source packages)
regex/\.(src\.rpm|spm)$
	Open=%cd %p/rpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view src.rpm

shell/.rpm
	Open=%cd %p/rpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view rpm

# deb
regex/\.u?deb$
	Open=%cd %p/deb://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view deb

# dpkg
shell/.debd
    Open=%cd %p/debd://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view debd

# apt
shell/.deba
    Open=%cd %p/deba://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view deba

# ISO9660
shell/i/.iso
	Open=%cd %p/iso9660://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view iso9660


regex/\.(diff|patch)$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view cat

# ar library
regex/\.s?a$
	Open=%cd %p/uar://
	#Open=%view{ascii} ar tv %f
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view ar

# gplib
shell/i/.lib
	Open=%cd %p/ulib://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view lib


### Plain compressed files ###

# zip
shell/i/.zip
	Open=%cd %p/uzip://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view zip

# gzip
regex/\.(gzip|gz|Z)$
    Open=/usr/lib/mc/ext.d/archive.sh view gz %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

# bzip2
type/^bzip2
	Open=/usr/lib/mc/ext.d/archive.sh view bzip2 %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

regex/\.bz2?$
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

# lzma
regex/\.lzma$
	Open=/usr/lib/mc/ext.d/archive.sh view lzma %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view lzma

# xz
regex/\.xz$
	Open=/usr/lib/mc/ext.d/archive.sh view xz %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view xz

### Default ###

# Default target for anything not described above
default/*
	Open=vim %f
	View=

### EOF ###
