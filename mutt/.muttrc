# === References ===
# https://pbrisbin.com/posts/two_accounts_in_mutt/
# http://stevelosh.com/blog/2012/10/the-homely-mutt/
# https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/

# === Mail account ===
# Use local maildir (as offlineimap is used for mail syncing)
set mbox_type = Maildir
set folder = "~/.mail"
# Load mailboxes that should be displayed while pressing 'y'
source ~/.mutt/mailboxes
# Switch to default account on startup
source ~/.mutt/accounts/account.posteo.de
# Define macros for switching between the accounts
macro index <f2> "<sync-mailbox><enter-command>source ~/.mutt/accounts/account.posteo.de<enter><change-folder>!<enter>"           "switch to account @posteo.de"
macro index <f3> "<sync-mailbox><enter-command>source ~/.mutt/accounts/account.kkdu.org<enter><change-folder>!<enter>"            "switch to account @kkdu.org"
macro index <f4> "<sync-mailbox><enter-command>source ~/.mutt/accounts/account.audeering.com<enter><change-folder>!<enter>"       "switch to account @audeering.com"
# Known mailing lists
source ~/.mutt/lists


# === Misc ===
set sort=threads
set sort_aux=last-date-received
folder-hook . exec collapse-all   # Start with collapsed threads,
unset collapse_unread             # but not for unread messages
set markers=no                    # Don't put '+' at the beginning of wrapped lines
set auto_tag                      # Apply operations to all currently tagged messages (default is press ';' before)
set folder_format="%2C %4N  %f"   # Format of the folder view (press y)
set timeout = 30                  # Time until mutt refresheses without keyboard actions
unset mark_old                    # Dont't use O for marking messages as old
set to_chars="  TCFLR"            # https://neomutt.org/guide/reference.html#to-chars
set index_format="%4C %S%T%?X?A& ? %{%b %d} %-15.15L (%?l?%4l&%4c?) %?M?\<%M\\> ?%s" # The '%?M?<%M> ?' part displays number of messages for collapsed threads;
                                                                                     # \< and \\> is a workaround for neomutt, see https://git.io/vPiml for the;
                                                                                     # %?X?A& ? displays A if attachment is present

# === Coloring ===
source ~/.mutt/colors/bubblelights.mutt

# === Header settings ===
ignore *                                         # ignore all headers
unignore From To Reply-To Subject Cc Date        # select the entries you want
unhdr_order *                                    # remove default header order
hdr_order Date: To: Cc: From: Reply-To: Subject  # order of entries

# === Read messages ===
set tilde                 # show a tilde at the end of messages
auto_view text/html       # auto convert text/html MIME type to text/plain
auto_view text/calendar   # view calendar invitations, see https://github.com/dmedvinsky/mutt-ics

# === Compose messages ===
set editor=/usr/bin/vim
set text_flowed=yes       # allow for line breaks with space at the end (http://bit.ly/2xkpXS3)
set fast_reply=yes        # when replying, don't prompt for address
set include=yes           # include original text on reply?
set forward_quote=yes     # include original text on forward?
set delete=yes            # don't ask for delete confirmation
set mime_forward=yes
set mime_forward_rest=yes # forward attachments

# === Key bindings ===
bind attach         <enter>     view-mailcap    # 'enter' runs html-viewer defined in mailcap on attachment
bind editor         <Tab>       complete-query  # 'Tab' completes query_command
bind editor         ^T          complete        # '^T' completes alias
bind pager          <up>        previous-line
bind pager          <down>      next-line
bind pager          <left>      previous-entry
bind pager          <right>     next-entry
bind pager,index    <space>     next-unread
bind index          g           first-entry
bind index          G           last-entry
bind index          <insert>    tag-entry       # 'insert' tags messages (like in mc)
bind index          *           tag-entry
bind index          /           search-reverse  # '/' as default search (reverse behavior)
bind index          <ESC>/      search
bind index          -           collapse-thread
bind index          _           collapse-all
bind index          x           next-unread-mailbox
bind compose        f           edit-from
bind compose        <ESC>f      edit-fcc

# === Key bindings (macros) ===
macro index         d           "<enter-command>set resolve=no<enter>\
<tag-prefix><clear-flag>N\
<enter-command>set resolve=yes<enter>\
<tag-prefix><delete-message><sync-mailbox>"                                 "mark message as read and move immediately to trash"
macro index         $           "<shell-escape>~/.mutt/sync_imap.sh<enter>" "run offlineimap to sync all mail"
#macro index         a           "M <limit>all<enter><collapse-all>"         "show all messages (undo limit)"
macro index         R           "T~N<enter>;WO\CT~T<enter>"                 "mark all messages as read"             # see http://blog.jwcxz.com/?p=810
macro index,pager   A           "<pipe-message>khard add-email<enter>"      "add the sender email address to khard"
macro index,pager   H           "<pipe-message>htmail-decode<enter>"        "render html mail using htmail-view"    # see https://github.com/liske/htmail-view
                                                                                                                    # requires libmime-tools-perl
# === Contacts ===
# Use CardDAV for address book,
# see https://github.com/scheibler/khard
# and http://www.mutt.org/doc/manual/#query-command
# Query command using khard with python2
#set query_command="khard email -p %s | awk '{ print $2\" \"$3\" <\"$1\">\" }' -"
# Query command using khard with python3
#set query_command="khard email -p %s"
# As khard is very slow, this is a workaround solution. Store your addresses
# once a day with a cron job in the file ~/.mutt/address_index_from_vcards and
# simply use grep to search for your address.
# The file can be created with the following command, see
# https://github.com/scheibler/khard/issues/103
# $khard --skip-unparsable email | awk -F'\t' -vOFS='\t' 'NR > 1 {gsub(/  +/, # "\t"); print $3,$1,$2}' > ~/.mutt/address_index_from_vcards
set query_command = "echo 'Searching ...' ; grep -i %s ~/.cache/address_index_from_vcards"
# To base the contact query on all of your mails, you might want to use mu, see
# http://www.djcbsoftware.nl/code/mu/cheatsheet.html
#set query_command = "mu cfind --format=mutt-ab  '%s'"
set query_format="%4c %t %-100.100a %?e?(%e)?"

# === Print ===
set print_command='set -e; f=`mktemp`; muttprint -P A4 -p TO_FILE:"$f"; evince "$f"; rm "$f"'

# === Calendar ===

# === Caching ===
# TODO: check if this is neccessary for maildir
set message_cachedir="~/.mutt/cache/"
set header_cache="~/.mutt/cache/"

# === Searching (notmuch settings) ===
# 'L' performs a notmuch query, showing only the results
macro index L "<enter-command>unset wait_key<enter>\
<shell-escape>read -p 'notmuch query: ' x; echo \$x >~/.cache/mutt_terms<enter>\
<limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | perl -le '@a=<>;chomp@a;s/\^id:// for@a;$,=\"|\";print@a'\`\"<enter>"\
                "show only messages matching a notmuch pattern"
# 'a' shows all messages again (supersedes default <alias> binding)
macro index a "<limit>all<enter>" "show all messages (undo limit)"
