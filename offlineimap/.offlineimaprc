# offlineimap configuration file
#
# For an introduction see
# https://wiki.archlinux.org/index.php/OfflineIMAP
#


# === General ===
#
# It is recommended to use only one default account and `maxsyncaccounts = 1`
# compare
# http://www.offlineimap.org/configuration/2016/01/29/why-i-m-not-using-maxconnctions.html

[general]
accounts = posteo
pythonfile = ~/.offlineimap.py
fsync = False
maxsyncaccounts = 1


# === Accounts ===
#
# Documentation on settings
#
# autorefresh : minutes between syncs
# quick       : quick-syncs do not update if the only changes were to IMAP
#               flags
#
# `autorefresh=0.5` together with `quick=10` yields 10 quick refreshes between
# each full refresh, with 0.5 minutes between every refresh, regardless of type.
#
# Recommendation:
#
# autorefresh = 0.5
# quick = 10

[Account posteo]
localrepository = posteo-local
remoterepository = posteo-remote
postsynchook = notmuch new
autorefresh = 0.5
quick = 10

[Account kkdu]
localrepository = kkdu-local
remoterepository = kkdu-remote
#postsynchook = notmuch new
autorefresh = 0.5
quick = 10

[Account audeering]
localrepository = audeering-local
remoterepository = audeering-remote
#postsynchook = notmuch new
autorefresh = 0.5
quick = 10

# === Repositories ===
#
# Documentation on settings
#
# keepalive : Instead of closing the connection once a sync is complete,
#             offlineimap will send empty data to the server to hold the
#             connection open. A value of 60 attempts to hold the connection
#             for a minute between syncs (both quick and autorefresh).This
#             setting has no effect if autorefresh and holdconnectionopen
#             are not both set.
# holdconnectionopen : offlineimap normally closes IMAP server connections
#                      between refreshes if the global option autorefresh is
#                      specified.  If you wish it to keep the connection open,
#                      set this to true. This setting has no effect if
#                      autorefresh is not set.
#
# Recommendation:
#
# keepalive = 60
# holdconnectionopen = yes


[Repository posteo-local]
type = Maildir
localfolders = ~/.mail/posteo.de
restoreatime = no
nametrans = lambda folder: {'drafts':  'Drafts',
                            'inbox':   'INBOX',
                            'sent':    'Sent',
                            'trash':   'Trash',
                            }.get(folder, folder)

[Repository posteo-remote]
type = IMAP
remotehost = posteo.de
remoteuser = hagen.wierstorf@posteo.de
remotepasseval = get_password("posteo.de")
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
keepalive = 60
holdconnectionopen = yes
nametrans = lambda folder: {'Drafts':  'drafts',
                            'INBOX':   'inbox',
                            'Sent':    'sent',
                            'Trash':   'trash',
                            }.get(folder, folder)

[Repository kkdu-local]
type = Maildir
localfolders = ~/.mail/kkdu.org
restoreatime = no
nametrans = lambda folder: {'drafts':      'Drafts',
                            'inbox':       'INBOX',
                            'sent':        'Gesendet',
                            'trash':       'Trash',
                            'auditory':    'INBOX.Uni.AUDITORY',
                            'gnuplotting': 'INBOX.Gnuplotting',
                            }.get(folder, folder)

[Repository kkdu-remote]
type = IMAP
remotehost = wp109.webpack.hosteurope.de
remoteuser = wp1113370-hagen
remotepasseval = get_password("kkdu.org")
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
keepalive = 60
holdconnectionopen = yes
nametrans = lambda folder: {'Drafts':             'drafts',
                            'INBOX':              'inbox',
                            'Gesendet':           'sent',
                            'Trash':              'trash',
                            'INBOX.Uni.AUDITORY': 'auditory',
                            'INBOX.Gnuplotting':  'gnuplotting',
                            }.get(folder.decode('imap4-utf-7').encode('utf-8'), folder.decode('imap4-utf-7').encode('utf-8'))
folderfilter = lambda folder: folder.decode('imap4-utf-7').encode('utf-8') not in ['Deleted Messages',
                                             'Entwuerfe',
                                             'Entw√ºrfe',
                                             'Gesendete Objekte',
                                             'INBOX.Matroska',
                                             'INBOX.Gnuplot-beta',
                                             'INBOX.Gnuplot-info',
                                             'INBOX.Politik',
                                             'INBOX.Politik.isl',
                                             'INBOX.Politik.isl-aktuell',
                                             'INBOX.Politik.isl-ol',
                                             'INBOX.Politik.rsb',
                                             'INBOX.Uni',
                                             'INBOX.Uni.fmrt',
                                             'INBOX.Uni.idem',
                                             'INBOX.Uni.medi',
                                             'INBOX.Uni.medi-cluster',
                                             'INBOX.Uni.medi-cluster.logwatch',
                                             'INBOX.Uni.medi-doktorhut',
                                             'INBOX.Uni.medi-fussi',
                                             'INBOX.Uni.medi-kultur',
                                             'INBOX.Uni.medi-latex',
                                             'INBOX.Uni.medi-linux',
                                             'INBOX.Uni.medi-matlab',
                                             'INBOX.Uni.medi-modelle',
                                             'INBOX.Uni.medi-neuro',
                                             'INBOX.Uni.medi-termine',
                                             'INBOX.Werbung',
                                             'Papierkorb',
                                             'Queue',
                                             'Sent',
                                             'Sent Messages',
                                             'Spam',
                                             'SPAM',
                                             ]

[Repository audeering-local]
type = Maildir
localfolders = ~/.mail/audeering.com
restoreatime = no
nametrans = lambda folder: {'drafts':  'Entw&APw-rfe',
                            'inbox':   'INBOX',
                            'sent':    'Gesendete Objekte',
                            'trash':   'Papierkorb',
                            'archive': 'Archive',
                            'spam':    'Junk Email',
                            }.get(folder, folder)

[Repository audeering-remote]
type = IMAP
remotehost = outlook.office365.com
remoteuser = hwierstorf@audeering.com
remotepasseval = get_password("audeering.com")
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
keepalive = 60
holdconnectionopen = yes
nametrans = lambda folder: {'Entw&APw-rfe':        'drafts',
                            'INBOX':         'inbox',
                            'Gesendete Objekte':    'sent',
                            'Papierkorb': 'trash',
                            'Archive':       'archive',
                            'Junk Email':    'spam',
                            }.get(folder, folder)
folderfilter = lambda folder: folder in ['Entw&APw-rfe', 'INBOX', 'Gesendete Objekte', 'Papierkorb', 'Archive', 'Junk Email']

# vim: ft=cfg
